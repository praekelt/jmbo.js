// Generated by CoffeeScript 1.3.3
(function() {
  var BarItemView, BarView, TabView, TabViewVessel, TabViewVessels, exports,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  TabViewVessel = (function(_super) {

    __extends(TabViewVessel, _super);

    function TabViewVessel() {
      return TabViewVessel.__super__.constructor.apply(this, arguments);
    }

    return TabViewVessel;

  })(Backbone.Model);

  TabViewVessels = (function(_super) {

    __extends(TabViewVessels, _super);

    function TabViewVessels() {
      return TabViewVessels.__super__.constructor.apply(this, arguments);
    }

    TabViewVessels.prototype.model = TabViewVessels;

    return TabViewVessels;

  })(Backbone.Collection);

  TabView = (function(_super) {

    __extends(TabView, _super);

    function TabView() {
      this.selectedIndex = __bind(this.selectedIndex, this);

      this.renderSelected = __bind(this.renderSelected, this);

      this.render = __bind(this.render, this);
      return TabView.__super__.constructor.apply(this, arguments);
    }

    TabView.prototype.className = 'jmbo-tab-view';

    TabView.prototype.selectedIndex = 0;

    TabView.prototype.initialize = function() {};

    TabView.prototype.render = function() {
      this.$el.contents().detach();
      this.$context = $('<div class="jmbo-tab-view-context"></div>');
      this.$el.append(this.$context);
      this.barView = new BarView({
        collection: this.collection
      });
      this.$el.append(this.barView.render().el);
      this.renderSelected();
      return this;
    };

    TabView.prototype.renderSelected = function() {
      this.$context.contents().detach();
      return this.$context.append("context");
    };

    TabView.prototype.selectedIndex = function(index) {
      if (index == null) {
        index = 0;
      }
    };

    return TabView;

  })(Backbone.View);

  BarView = (function(_super) {

    __extends(BarView, _super);

    function BarView() {
      this.render = __bind(this.render, this);
      return BarView.__super__.constructor.apply(this, arguments);
    }

    BarView.prototype.tagName = 'ul';

    BarView.prototype.className = '.jmbo-bar-view';

    BarView.prototype.render = function() {
      this.$el.html('bar');
      return this;
    };

    return BarView;

  })(Backbone.View);

  BarItemView = (function(_super) {

    __extends(BarItemView, _super);

    function BarItemView() {
      this.render = __bind(this.render, this);
      return BarItemView.__super__.constructor.apply(this, arguments);
    }

    BarItemView.prototype.tagName = 'li';

    BarItemView.prototype.render = function() {
      this.$el.html('saodksaopdksa');
      return this;
    };

    return BarItemView;

  })(Backbone.View);

  exports = this;

  exports.Jmbo = exports.Jmbo || {};

  exports.Jmbo.TabView = TabView;

}).call(this);
